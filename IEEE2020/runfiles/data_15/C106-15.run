reset;

model IEEE.mod;
#data IEEE.dat;

param instance_name symbolic;
#LOAD THE DATA
let instance_name := "C101-5.txt";
data ("data_15/C106-15.txt");

let Cs := 1.5 * (Q / g * Cr);


option solver gurobi;
option gurobi_options "timelimit=28800 Threads=2 bestbound=1 outlev=1";

solve;


# 設定輸出檔案名稱
param output_file symbolic default "data_15/C106-15";

# 設定完整的 Windows 路徑
param output_dir symbolic default "ampl_outputs/";
# 設定完整的輸出檔案路徑
param output_path symbolic default output_dir & output_file & ".txt";

# 清空輸出檔案
printf "" > (output_path);

param mip_gap;
let mip_gap := abs(TotalCost - TotalCost.bestbound) / max(1, abs(TotalCost));
print "MIP Gap (%): ", 100 * mip_gap >> (output_path);
display _solve_elapsed_time > (output_path);
display TotalCost > (output_path);
display x >> (output_path);
display sum{i in D0, j in Vplun} x[i,j]>> (output_path);        			     # ECV fixed cost
display sum{i in Vall, j in Vall: i != j} x[i,j] * t[i,j]>> (output_path);      # ECV distance cost
display sum{i in F} z[i] * R[i]>> (output_path);
display sum{i in F, j in Vplunend: i != j} y[i]* x[i,j]>> (output_path);
display a>> (output_path);
display u>> (output_path);
display v>> (output_path);
display y>> (output_path);
display z>> (output_path);
display R>> (output_path);
display Y>> (output_path);


